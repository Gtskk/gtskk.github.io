<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[过渡网]]></title>
  <subtitle><![CDATA[劳逸结合]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://gtskk.coding.io/"/>
  <updated>2016-01-08T03:03:16.195Z</updated>
  <id>http://gtskk.coding.io/</id>
  
  <author>
    <name><![CDATA[过渡网]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[生意的哲学]]></title>
    <link href="http://gtskk.coding.io/2015/11/06/business-philosophy/"/>
    <id>http://gtskk.coding.io/2015/11/06/business-philosophy/</id>
    <published>2015-11-06T15:05:42.000Z</published>
    <updated>2016-01-08T03:03:16.195Z</updated>
    <content type="html"><![CDATA[<p>今晚在翻看生意有关的资料，看到不错，就记录一下，以便日后查阅。<br><a id="more"></a></p>
<h2 id="u4E3A_u4EC0_u4E48_u6709_u4E9B_u4EBA_u4E00_u8F88_u5B50_u90FD_u5728_u6446_u5730_u644A_uFF1F"><a href="#u4E3A_u4EC0_u4E48_u6709_u4E9B_u4EBA_u4E00_u8F88_u5B50_u90FD_u5728_u6446_u5730_u644A_uFF1F" class="headerlink" title="为什么有些人一辈子都在摆地摊？"></a>为什么有些人一辈子都在摆地摊？</h2><p>昨夜晚风真让人沉醉，独自走一段路，享受下夜空的宁静和世界的清净。走过一个僻静的地方，有一个书摊，因为周围没任何摊位，所以她独享了那方圆十几米的地方，很多的书在塑料纸上铺开来，很便宜，我知道都是盗版，其实一直很想看《三体》，所以停下来，想看看。</p>
<p>书摊的老板是个女的，应该说是中年妇女，目光被路边跳舞的人群吸引。</p>
<p>我问了下，有没有《三体》，她没听清，哦了一声，我又问了一句，她听清了摇了摇头，不再理我。我顿时没了想看下去的欲望，浏览了一下书摊便走了。</p>
<p>她的书摊面前本身也没有人。这和我逛过的一些小店极其类似。</p>
<p>我们不可否认，有些小店确实生活的不错，老板的服务不好，态度不好，饭馆味道也不好，但是便宜，或者时间长了。或者那个地方就他一家独占资源，所以才会生意不错，能生存下去。</p>
<p>前段时间装修房子，去装修市场看了看建材，一条巷子就三家店，却每一家生意都不一样。第一家店刚走到门口，店主便出来问，想买什么啊，我帮你看看，我不由自主就进去了，本来是不想买的，却买了点，第二家店走到门口，店主看了看说买什么啊？然后没起身，见我没反应便不再理会，第三家店，我走到门口几乎只是看了看，然后低头看手机，我故意走进去，她也只是抬头看了看，仍然任由你在店里四处转，不闻不问。</p>
<p>三家店，三种风格，各占一个优势，第一家店，东西贵，人热情，服务很好，又是端茶倒水，虽然花了高价格，但是我很高兴，第二家店不主动服务，价格适中，你来，我应声，你走我不送的，第三家是最最便宜的，却没任何服务可言，当然我观察了下，三家店都各自有些生意，都还能存活，但是赚多赚少一眼就能看出了。我把这个例子给河北程大个小火锅加盟店的小王说，他说那肯定第三家生意最差，就算他再便宜。我说对，是这样。</p>
<p>我在经过第四家店的时候，店老板正在跟客人争辩，说我也得挣钱啊，我什么什么都没收你的，你又没做多少，你那点还叫多？客人说，你怎么这么说话，我还想着给你介绍客户呢，你这样我怎么介绍，为了区区那一点点钱就这样，而他却说介绍不介绍我不想，但是我该挣的钱就要挣，声音大而高昂，理直气壮，给人感觉好像要打架似的，客人非常生意无奈说你说的有理，我错了，对方竟然很满意的说，对啊，就是这个道理啊。我暗自笑了，一个非要跟客户争高低的人，非要在客户那里占理的人，这生意做的确实很吃力。</p>
<p>所以我在想，为什么有些人一辈子都在摆地摊？为什么有些人一辈子都只适合开个小店？<code>大多数不是他不想，而是他没有更大的心胸和人生格局，说白了就是没有经商的心</code>。我门口有个摆地摊的小伙，叫寂寞鱿鱼，第一次见他，在做鱿鱼很起劲儿，话不多，第二次见已经有很多话了，第三次的时候已经跟小区周围人打成一片了，第四次他已经把鱿鱼车换成大的了，人群络绎不绝，这就是改变。<code>真正能从商的人，能做生意的人，能创业的人都是在随着周围环境而不断的提升自己，总结自己的，改变自己</code>。</p>
<p>在生意场上也许就两三句话，能值得千金，这是我开始做程大个小火锅时我爸爸给我说的。别人买的是你的东西，但是打交道的确实你的人，而你的人如何，就立刻能牵扯到你的东西如何，人都不怎么样，东西能好么？这是我们很多人的一种联想。</p>
<blockquote>
<p>所以，要做生意，先做人，如果你太过自视清高，或者你本身不善于交际，或者你根本就没那种心，那还是不要强求。生意好坏，大小，都跟你的人心性格局有关。眼睛只看到这方圆十几米，那你的生意也就只能做到这十几米，如果看到全天下哪就能做到全天下。</p>
</blockquote>
<p>作者：程大个<br>原文链接：<a href="http://www.zhihu.com/question/31494190/answer/65655408" target="_blank" rel="external">http://www.zhihu.com/question/31494190/answer/65655408</a></p>
<p><img src="/images/weixin.jpg" alt="微信"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今晚在翻看生意有关的资料，看到不错，就记录一下，以便日后查阅。<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[心理学之禅--第二弹]]></title>
    <link href="http://gtskk.coding.io/2015/11/01/understanding-others-easily2/"/>
    <id>http://gtskk.coding.io/2015/11/01/understanding-others-easily2/</id>
    <published>2015-11-01T14:49:58.000Z</published>
    <updated>2015-11-06T03:53:39.990Z</updated>
    <content type="html"><![CDATA[<p>上一次我们在<a href="/2015/10/28/understanding-customers-easily/">心理学之禅–也许你可以读懂他人</a>中介绍了<code>配合原则</code>，<code>首因效应</code>，<code>末因效应</code>，<code>光环陷阱</code>和<code>刻板效应</code>，下面我来接着介绍一些有用的东东：<br><a id="more"></a></p>
<ol>
<li>经验陷阱：经验是把双刃剑，既能帮人也能杀人！</li>
<li>投入陷阱：为何千里马常有而伯乐不常有？</li>
<li>投射陷阱：豆腐脑应该是咸的还是甜的？</li>
</ol>
<h2 id="u7ECF_u9A8C_u9677_u9631_uFF1A_u7ECF_u9A8C_u662F_u628A_u53CC_u5203_u5251_uFF0C_u65E2_u80FD_u5E2E_u4EBA_u4E5F_u80FD_u6740_u4EBA_uFF01"><a href="#u7ECF_u9A8C_u9677_u9631_uFF1A_u7ECF_u9A8C_u662F_u628A_u53CC_u5203_u5251_uFF0C_u65E2_u80FD_u5E2E_u4EBA_u4E5F_u80FD_u6740_u4EBA_uFF01" class="headerlink" title="经验陷阱：经验是把双刃剑，既能帮人也能杀人！"></a>经验陷阱：经验是把双刃剑，既能帮人也能杀人！</h2><p>对于一些新手，菜鸟，往往会羡慕一些经验丰富，有很多阅历的人，不过大家往往也会忽略经验带来的危害。</p>
<p>在日常生活中，我们往往会认为贵的东西一定会比便宜的东西好，国外的东西肯定比国产的好，大城市生活的人肯定比农村的好…..这些都是经验给我们的感觉，但是往往我们容易陷入一种陷阱中。</p>
<p>经验效应：人在社会认知中，经常受以前模式的影响，产生一种不自觉的心理活动的储备状态，在脑海中形成一定的思维定式，按照固定的思路去思考问题，这种现象就成为经验效应，又可称之为经验陷阱。</p>
<p>人生许多事都没有固定的答案，而且我们积累的经验一方面可以帮助我们，但是另一方面却是对我们是一种限制，因此要客观的去看待。</p>
<p>总之：在日常生活中，要将有利于你的尽量放大，不利于你的尽量抹掉。</p>
<h2 id="u6295_u5165_u9677_u9631_uFF1A_u4E3A_u4F55_u5343_u91CC_u9A6C_u5E38_u6709_u800C_u4F2F_u4E50_u4E0D_u5E38_u6709_uFF1F"><a href="#u6295_u5165_u9677_u9631_uFF1A_u4E3A_u4F55_u5343_u91CC_u9A6C_u5E38_u6709_u800C_u4F2F_u4E50_u4E0D_u5E38_u6709_uFF1F" class="headerlink" title="投入陷阱：为何千里马常有而伯乐不常有？"></a>投入陷阱：为何千里马常有而伯乐不常有？</h2><p>从古至今，都有许多不得志的人，因此就有个“千里马常有而伯乐不常有”的说法，可是否真是如此呢？</p>
<p>在日常生活中，我们往往会对自己花了很多心思做的事倍感满意，希望得到他人的赞赏，当他人不认同甚至指出问题时，就会感到很不快，就算最后真的是存在问题，就不愿再提起。</p>
<p>因此，投入越多就越容易高估物品价值，这种现象被称为宜家效应，同时也就引出了本节要讲的—投入陷阱：当我们对某人某物或者某件事投入过渡的情感或者劳动，我们就越容易高估此人此物品或这件事的价值！</p>
<h2 id="u6295_u5C04_u9677_u9631_uFF1A_u8C46_u8150_u8111_u5E94_u8BE5_u662F_u54B8_u7684_u8FD8_u662F_u751C_u7684_uFF1F"><a href="#u6295_u5C04_u9677_u9631_uFF1A_u8C46_u8150_u8111_u5E94_u8BE5_u662F_u54B8_u7684_u8FD8_u662F_u751C_u7684_uFF1F" class="headerlink" title="投射陷阱：豆腐脑应该是咸的还是甜的？"></a>投射陷阱：豆腐脑应该是咸的还是甜的？</h2><p>生活中，我们许多人喜欢喝别人争论，争个头破血流，就为了证明自己的是对的（KK以前就是如此，嘿嘿），而且要让别人也认同自己的观点。这就是投射效应最显著的特征。</p>
<p>投射效应：个体依据其需要情绪的主观指向将自己的特征转移到他人身上的现象！</p>
<p>投射的实质：个体将自己身上所存在的心理行为特征，推测为在他人身上也同样存在，也就是俗称的以己度人。</p>
<h3 id="u53C2_u8003_uFF1A_u521B_u4E1A_u5FC5_u987B_u77E5_u9053_u7684_u5FC3_u7406_u5B66_u20145_u5206_u949F_u8BFB_u61C2_u5BA2_u6237"><a href="#u53C2_u8003_uFF1A_u521B_u4E1A_u5FC5_u987B_u77E5_u9053_u7684_u5FC3_u7406_u5B66_u20145_u5206_u949F_u8BFB_u61C2_u5BA2_u6237" class="headerlink" title="参考：创业必须知道的心理学—5分钟读懂客户"></a>参考：<a href="http://www.chuanke.com/1019545-119839.html" target="_blank" rel="external">创业必须知道的心理学—5分钟读懂客户</a></h3><h1 id="u672A_u5B8C_u5F85_u7EED_u2026_u2026"><a href="#u672A_u5B8C_u5F85_u7EED_u2026_u2026" class="headerlink" title="未完待续……"></a>未完待续……</h1><p><img src="/images/weixin.jpg" alt="微信"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>上一次我们在<a href="/2015/10/28/understanding-customers-easily/">心理学之禅–也许你可以读懂他人</a>中介绍了<code>配合原则</code>，<code>首因效应</code>，<code>末因效应</code>，<code>光环陷阱</code>和<code>刻板效应</code>，下面我来接着介绍一些有用的东东：<br>]]>
    
    </summary>
    
      <category term="心理学" scheme="http://gtskk.coding.io/tags/%E5%BF%83%E7%90%86%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[心理学之禅--也许你可以读懂他人]]></title>
    <link href="http://gtskk.coding.io/2015/10/28/understanding-customers-easily/"/>
    <id>http://gtskk.coding.io/2015/10/28/understanding-customers-easily/</id>
    <published>2015-10-28T08:41:08.000Z</published>
    <updated>2015-10-28T08:41:29.863Z</updated>
    <content type="html"><![CDATA[<p>人是一种很复杂的生物，不过要想在社会中更好的生存，就不得不学会与人打交道。那么有没有什么方法可以提升看懂他人的能力，从而更好的与他人相处呢？<br><a id="more"></a><br>这是当然的，下面列举下：</p>
<ol>
<li>配合原则：为何别人不喜欢你？</li>
<li>首因效应：让别人对你一见钟情而不是一剑钟情</li>
<li>末因效应：为何最后印象能留下如此深刻的印象？</li>
<li>光环陷阱：外表有时会给你加分，也会应先给你的判断。</li>
<li>刻板效应：为何销售口才太好反而被拒？</li>
</ol>
<h2 id="u914D_u5408_u539F_u5219_uFF1A_u4E3A_u4F55_u522B_u4EBA_u4E0D_u559C_u6B22_u4F60_uFF1F"><a href="#u914D_u5408_u539F_u5219_uFF1A_u4E3A_u4F55_u522B_u4EBA_u4E0D_u559C_u6B22_u4F60_uFF1F" class="headerlink" title="配合原则：为何别人不喜欢你？"></a>配合原则：为何别人不喜欢你？</h2><p>我们立足于社会中，做自己擅长做的事，也许有许多人会比较多才多艺，但是在厉害的人也不可能擅长所有的技能，总是有许多场合中，听到朋友或者不相识的人讲述自己并不擅长的东西，那么这时我们应该怎样应对呢？</p>
<p>有些人会选择打肿脸充胖子，不懂装懂，不能让人看出他其实是不了解的；有些人会默不作声，仔细的聆听，时不时还会通过肢体动作表示赞同；有些人则表示毫无兴趣，甚至故意捣乱。相信很多人应该都经历过这种场景，此时相对聪明的做法应该是仔细的聆听，特别是对于自己并不太擅长的东西，如果非要抢风头，最后往往会弄巧成拙，搞得不欢而散。</p>
<p>此时就提到了我们讲的配合原则，这不是迎合拍马，这只是一种处世之道，人都喜欢被他人肯定，被他人赞赏，既然自己并不懂，何不仔细聆听，一方面满足了别人，另一方面也可以让自己多了解到一些知识。</p>
<h2 id="u9996_u56E0_u6548_u5E94_uFF1A_u8BA9_u522B_u4EBA_u5BF9_u4F60_u4E00_u89C1_u949F_u60C5_u800C_u4E0D_u662F_u4E00_u5251_u949F_u60C5"><a href="#u9996_u56E0_u6548_u5E94_uFF1A_u8BA9_u522B_u4EBA_u5BF9_u4F60_u4E00_u89C1_u949F_u60C5_u800C_u4E0D_u662F_u4E00_u5251_u949F_u60C5" class="headerlink" title="首因效应：让别人对你一见钟情而不是一剑钟情"></a>首因效应：让别人对你一见钟情而不是一剑钟情</h2><blockquote>
<p>首因效应由美国心理学家洛钦斯首先提出的，也叫首次效应、优先效应或第一印象效应，指交往双方形成的第一次印象对今后交往关系的影响，也即是“先入为主”带来的效果。虽然这些第一印象并非总是正确的，但却是最鲜明、最牢固的，并且决定着以后双方交往的进程。如果一个人在初次见面时给人留下良好的印象，那么人们就愿意和他接近，彼此也能较快地取得相互了解，并会影响人们对他以后一系列行为和表现的解释。反之，对于一个初次见面就引起对方反感的人，即使由于各种原因难以避免与之接触，人们也会对之很冷淡，在极端的情况下，甚至会在心理上和实际行为中与之产生对抗状态。</p>
</blockquote>
<h2 id="u672B_u56E0_u6548_u5E94_uFF1A_u4E3A_u4F55_u6700_u540E_u5370_u8C61_u80FD_u7559_u4E0B_u5982_u6B64_u6DF1_u523B_u7684_u5370_u8C61_uFF1F"><a href="#u672B_u56E0_u6548_u5E94_uFF1A_u4E3A_u4F55_u6700_u540E_u5370_u8C61_u80FD_u7559_u4E0B_u5982_u6B64_u6DF1_u523B_u7684_u5370_u8C61_uFF1F" class="headerlink" title="末因效应：为何最后印象能留下如此深刻的印象？"></a>末因效应：为何最后印象能留下如此深刻的印象？</h2><blockquote>
<p>末轮效应的主要内容是：在人际交往之中，人们所留给交往对象的最后的印象，通常也是非常重要的。在许多情况下，它往往是一个单位或某个人所留给交往对象的整体印象的重要组成部分。有时，它甚至直接决定着该单位或个人的整体形象是否完美，以及完美的整体形象能否继续得以维持。</p>
</blockquote>
<p>举个栗子：平常我们去商店买东西，刚进入店里时，老板往往对我们很很热情，让我们印象非常之不错，但是当我们买了东西之后，许多老板就开始对你爱理不理了，这样的场景我想大家应该遇到的不在少数，想必此时大家心里感觉应该很不爽吧。</p>
<p>分析以上场景，老板的首因效应做的很好，不过末因效应做的很差，最终导致我们对老板的看法更不好。因此末因效应相对于首因效应显得更加重要。</p>
<h2 id="u5149_u73AF_u9677_u9631_uFF1A_u5916_u8868_u6709_u65F6_u4F1A_u7ED9_u4F60_u52A0_u5206_uFF0C_u4E5F_u4F1A_u5E94_u5148_u7ED9_u4F60_u7684_u5224_u65AD_u3002"><a href="#u5149_u73AF_u9677_u9631_uFF1A_u5916_u8868_u6709_u65F6_u4F1A_u7ED9_u4F60_u52A0_u5206_uFF0C_u4E5F_u4F1A_u5E94_u5148_u7ED9_u4F60_u7684_u5224_u65AD_u3002" class="headerlink" title="光环陷阱：外表有时会给你加分，也会应先给你的判断。"></a>光环陷阱：外表有时会给你加分，也会应先给你的判断。</h2><blockquote>
<p>光环陷阱，又称“光环效应，晕轮效应”，属于心理学范畴，是指当认知者对一个人的某种特征形成好或坏的印象后，他还倾向于据此推论该人其他方面的特征。本质上是一种以偏概全的认知上的偏误。晕轮效应愈来愈多地被应用在企业管理上，其对组织管理的负面影响主要是体现在各种组织决策上。</p>
</blockquote>
<h2 id="u523B_u677F_u6548_u5E94_uFF1A_u4E3A_u4F55_u9500_u552E_u53E3_u624D_u592A_u597D_u53CD_u800C_u88AB_u62D2_uFF1F"><a href="#u523B_u677F_u6548_u5E94_uFF1A_u4E3A_u4F55_u9500_u552E_u53E3_u624D_u592A_u597D_u53CD_u800C_u88AB_u62D2_uFF1F" class="headerlink" title="刻板效应：为何销售口才太好反而被拒？"></a>刻板效应：为何销售口才太好反而被拒？</h2><blockquote>
<p>刻板效应，又称刻板印象，它是指人们用刻印在自己头脑中的关于某人或事、某一类人或事的固定印象，作为判断和评价人或事的依据的心理现象。刻板印象虽然可以在一定范围内进行判断，不用探索信息，迅速洞悉概况，节省时间与精力，但是往往可能会形成偏见，忽略个体差异性，人们往往把某个具体的人或事看作是某类人或事的典型代表，把对某类人或事的评价视为对某个人或事的评价，因而影响正确的判断，若不及时纠正进一步发展或可扭曲为歧视[1]  。</p>
</blockquote>
<h3 id="u53C2_u8003_uFF1A_u521B_u4E1A_u5FC5_u987B_u77E5_u9053_u7684_u5FC3_u7406_u5B66_u20145_u5206_u949F_u8BFB_u61C2_u5BA2_u6237"><a href="#u53C2_u8003_uFF1A_u521B_u4E1A_u5FC5_u987B_u77E5_u9053_u7684_u5FC3_u7406_u5B66_u20145_u5206_u949F_u8BFB_u61C2_u5BA2_u6237" class="headerlink" title="参考：创业必须知道的心理学—5分钟读懂客户"></a>参考：<a href="http://www.chuanke.com/1019545-119839.html" target="_blank" rel="external">创业必须知道的心理学—5分钟读懂客户</a></h3><h1 id="u672A_u5B8C_u5F85_u7EED_u2026_u2026"><a href="#u672A_u5B8C_u5F85_u7EED_u2026_u2026" class="headerlink" title="未完待续……"></a>未完待续……</h1><p><img src="/images/weixin.jpg" alt="微信"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>人是一种很复杂的生物，不过要想在社会中更好的生存，就不得不学会与人打交道。那么有没有什么方法可以提升看懂他人的能力，从而更好的与他人相处呢？<br>]]>
    
    </summary>
    
      <category term="心理学" scheme="http://gtskk.coding.io/tags/%E5%BF%83%E7%90%86%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Nginx反向代理与负载均衡]]></title>
    <link href="http://gtskk.coding.io/2015/10/24/nginx-balance/"/>
    <id>http://gtskk.coding.io/2015/10/24/nginx-balance/</id>
    <published>2015-10-24T04:25:38.000Z</published>
    <updated>2015-10-28T07:40:15.006Z</updated>
    <content type="html"><![CDATA[<p>今天在<a href="http://www.jikexueyuan.com" target="_blank" rel="external">极客学院</a>看了一部视频教程，主题是<code>Nginx反向代理与负载均衡</code>，看过之后连忙记录下来。<br><a id="more"></a><br>先理一下知识要点吧：</p>
<ol>
<li>什么是反向代理与负载均衡</li>
<li>Nginx负载均衡的实现</li>
<li>HTTP Upstream模块</li>
<li>其他负载均衡的方法</li>
</ol>
<h2 id="u4EC0_u4E48_u662F_u53CD_u5411_u4EE3_u7406_u4E0E_u8D1F_u8F7D_u5747_u8861"><a href="#u4EC0_u4E48_u662F_u53CD_u5411_u4EE3_u7406_u4E0E_u8D1F_u8F7D_u5747_u8861" class="headerlink" title="什么是反向代理与负载均衡"></a>什么是反向代理与负载均衡</h2><h3 id="u4EC0_u4E48_u662F_u53CD_u5411_u4EE3_u7406"><a href="#u4EC0_u4E48_u662F_u53CD_u5411_u4EE3_u7406" class="headerlink" title="什么是反向代理"></a>什么是反向代理</h3><p>我们有时候，用自己的计算机A想访问国外的某个网站B，但是访问不了，此时，有一台中间服务器C可以访问国外的网站B，那么，我们可以用自己的电脑访问服务器C，通过C来访问B这个网站。那么这个时候，服务器C称为代理服务器，这种访问方式叫做<code>正向代理</code>。正向代理有一个特点，就是<code>我们明确知道要访问哪个网站</code>。再如，当我们有一个服务器集群，并且服务器集群中的每台服务器的内容一样的时候，同样我们要直接从个人电脑访问到服务器集群的服务器的时候无法访问，且此时第三方服务器能访问集群，这个时候，我们通过第三方服务器访问服务器集群的内容，但是<code>此时我们并不知道是哪一台服务器提供的内容</code>，此时的代理方式称为<code>反向代理</code>。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#23567;&#32467;&#65306;&#10;&#27491;&#21521;&#20195;&#29702;--A&#19981;&#33021;&#30452;&#25509;&#35775;&#38382;C&#65292;B&#21487;&#20197;&#30452;&#25509;&#35775;&#38382;C&#65292;&#28982;&#21518;A&#36890;&#36807;B&#20316;&#20026;&#20195;&#29702;&#26381;&#21153;&#22120;&#35775;&#38382;C&#23601;&#21483;&#20570;&#27491;&#21521;&#20195;&#29702;&#12290;&#10;&#21453;&#21521;&#20195;&#29702;--A&#19981;&#33021;&#30452;&#25509;&#35775;&#38382;&#26381;&#21153;&#22120;&#38598;&#32676;&#20013;&#30340;&#25968;&#25454;&#65292;B&#21487;&#20197;&#35775;&#38382;&#65292;&#27492;&#26102;&#36890;&#36807;B&#20316;&#20026;&#20195;&#29702;&#26381;&#21153;&#22120;&#21435;&#35775;&#38382;&#24613;&#32676;&#20247;&#30340;&#25968;&#25454;&#65292;&#20294;&#26159;A&#24182;&#19981;&#30693;&#36947;B&#20250;&#23558;&#38598;&#32676;&#20013;&#30340;&#21738;&#21488;&#26381;&#21153;&#22120;&#20013;&#30340;&#20869;&#23481;&#32473;A&#65292;&#27492;&#26102;&#30340;&#20195;&#29702;&#26041;&#24335;&#23601;&#21483;&#21453;&#21521;&#20195;&#29702;&#12290;</span><br></pre></td></tr></table></figure>
<h3 id="u4EC0_u4E48_u662F_u8D1F_u8F7D_u5747_u8861"><a href="#u4EC0_u4E48_u662F_u8D1F_u8F7D_u5747_u8861" class="headerlink" title="什么是负载均衡"></a>什么是负载均衡</h3><p>当一台服务器的单位时间内的访问量越大的时候，服务器的压力会越大。当一台服务器压力大得超过自身的承受能力的时候，服务器会崩溃。为了避免服务器崩溃，让用户有更好地体验，我们通常通过负载均衡的方式来分担服务器的压力。那么什么是负载均衡呢？是这样，<code>我们可以建立很多很多个服务器，这些服务器组成一个服务器集群，然后，当用户访问我们网站的时候，先访问一个中间服务器，再让这个中间服务器在服务器集群中选择一个压力较小的服务器，然后将该访问请求引入该选择的服务器。这样，用户的每次访问，都会保证服务器集群中的每个服务器的压力趋于平衡，分担了服务器压力，避免了服务器崩溃的情况。</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#36127;&#36733;&#22343;&#34913;--&#36890;&#36807;&#35768;&#22810;&#26381;&#21153;&#22120;&#24314;&#31435;&#19968;&#20010;&#26381;&#21153;&#22120;&#38598;&#32676;&#65292;&#28982;&#21518;&#24403;&#29992;&#25143;&#35775;&#38382;&#32593;&#31449;&#30340;&#26102;&#20505;&#65292;&#20808;&#35775;&#38382;&#19968;&#20010;&#20013;&#38388;&#26381;&#21153;&#22120;&#65292;&#20877;&#35753;&#36825;&#21488;&#20013;&#38388;&#26381;&#21153;&#22120;&#36873;&#25321;&#38598;&#32676;&#20013;&#19968;&#20010;&#21387;&#21147;&#36739;&#23567;&#30340;&#26381;&#21153;&#22120;&#65292;&#23558;&#29992;&#25143;&#30340;&#35775;&#38382;&#24341;&#20837;&#21040;&#34987;&#36873;&#25321;&#30340;&#26381;&#21153;&#22120;&#12290;&#36825;&#26679;&#27599;&#27425;&#29992;&#25143;&#35775;&#38382;&#37117;&#20250;&#20445;&#35777;&#26381;&#21153;&#22120;&#38598;&#32676;&#20013;&#30340;&#27599;&#20010;&#26381;&#21153;&#22120;&#30340;&#21387;&#21147;&#36235;&#20110;&#24179;&#34913;&#65292;&#20998;&#26723;&#20102;&#26381;&#21153;&#22120;&#21387;&#21147;&#65292;&#21487;&#20197;&#36991;&#20813;&#26381;&#21153;&#22120;&#23849;&#28291;&#30340;&#24773;&#20917;&#12290;</span><br></pre></td></tr></table></figure>
<h2 id="Nginx_u8D1F_u8F7D_u5747_u8861_u7684_u5B9E_u73B0"><a href="#Nginx_u8D1F_u8F7D_u5747_u8861_u7684_u5B9E_u73B0" class="headerlink" title="Nginx负载均衡的实现"></a>Nginx负载均衡的实现</h2><p>Nginx是一款可以通过反向代理实现负载均衡的服务器，使用Nginx服务实现负载均衡的时候，用户的访问首先会访问到Nginx服务器，然后Nginx服务器再从服务器集群表中选择压力较小的服务器，然后将该访问请求引向该服务器。若服务器集群中的某个服务器崩溃，那么从待选服务器列表中将该服务器删除，也就是说一个服务器假如崩溃了，那么Nginx就肯定不会将访问请求引入该服务器了。</p>
<h2 id="HTTP_Upstream_u6A21_u5757"><a href="#HTTP_Upstream_u6A21_u5757" class="headerlink" title="HTTP Upstream模块"></a>HTTP Upstream模块</h2><h3 id="u4EC0_u4E48_u662FHTTP_Upstream_u6A21_u5757"><a href="#u4EC0_u4E48_u662FHTTP_Upstream_u6A21_u5757" class="headerlink" title="什么是HTTP Upstream模块"></a>什么是HTTP Upstream模块</h3><p>Upstream模块是Nginx服务器的一个重要模块。Upstream模块通过在客户端ip之间进行轮询实现后端的负载均衡。常用的指令有ip_hash指令、server指令和upstream指令等。</p>
<h3 id="ip_hash_u6307_u4EE4"><a href="#ip_hash_u6307_u4EE4" class="headerlink" title="ip_hash指令"></a>ip_hash指令</h3><p>在负载均衡系统中，假如用户在某台服务器上登录，那么如果该用户第二次请求的时候，因为我们是负载均衡系统，每次请求都会重新定位到服务器集群中的一个服务器，那么此时如果将已经登录服务器A的用户再定位到其他服务器，显然不妥。故而，我们可以采用ip_hash指令解决这个问题，如果客户端请求已经访问了服务器A并登录，那么第二次请求的时候，会将该请求通过哈希算法自动定位到该后端服务器中。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip_hash&#25351;&#20196;--&#22914;&#26524;&#23458;&#25143;&#31471;&#35831;&#27714;&#24050;&#32463;&#35775;&#38382;&#20102;&#26381;&#21153;&#22120;A&#24182;&#30331;&#38470;&#65292;&#37027;&#20040;&#31532;&#20108;&#27425;&#35831;&#27714;&#26102;&#65292;&#20250;&#23558;&#35813;&#35831;&#27714;&#36890;&#36807;&#21704;&#24076;&#31639;&#27861;&#33258;&#21160;&#23450;&#20301;&#21040;&#20043;&#21069;&#35775;&#38382;&#36807;&#30340;&#26381;&#21153;&#22120;&#20013;&#12290;</span><br></pre></td></tr></table></figure>
<h3 id="server_u6307_u4EE4"><a href="#server_u6307_u4EE4" class="headerlink" title="server指令"></a>server指令</h3><p>server指令主要用于指定服务器的名称和参数，比如可以通过weight参数来设置服务器的权重，weight值越大，权重越高，轮询中被选择到的概率就大。</p>
<h3 id="upstream_u6307_u4EE4_u53CA_u76F8_u5173_u53D8_u91CF"><a href="#upstream_u6307_u4EE4_u53CA_u76F8_u5173_u53D8_u91CF" class="headerlink" title="upstream指令及相关变量"></a>upstream指令及相关变量</h3><p>upstream指令主要是用于设置一组可以在proxy_pass和fastcgi_pass指令中使用额代理服务器，默认负载均衡方式为轮询。</p>
<h2 id="u5176_u4ED6_u8D1F_u8F7D_u5747_u8861_u7684_u65B9_u6CD5"><a href="#u5176_u4ED6_u8D1F_u8F7D_u5747_u8861_u7684_u65B9_u6CD5" class="headerlink" title="其他负载均衡的方法"></a>其他负载均衡的方法</h2><h3 id="u5176_u4ED6_u8D1F_u8F7D_u5747_u8861_u5B9E_u73B0_u7684_u5E38_u7528_u65B9_u5F0F"><a href="#u5176_u4ED6_u8D1F_u8F7D_u5747_u8861_u5B9E_u73B0_u7684_u5E38_u7528_u65B9_u5F0F" class="headerlink" title="其他负载均衡实现的常用方式"></a>其他负载均衡实现的常用方式</h3><p>负载均衡的实现方法除了可以使用Nginx服务器实现外，还可以通过很多种方法来实现。负载均衡的核心就是建立一个服务器集群，然后用户首先访问到第三方代理服务器，然后由代理服务器选择一个集群中的服务器，然后将请求引入选定的服务器。那么代理服务器可以使用多种方式来充当，故而实现负载均衡的方式也是多种。总的来说，负载均衡实现的方式分为<code>软件实现和硬件实现</code>两种，如果中间的代理机构是硬件，那么就是通过硬件设备来实现负载均衡的方式，如果中间的代理机构为软件，就是软件实现负载均衡的方式。而其中，软件又可以是服务器软件、系统软件以及应用软件等充当。</p>
<h3 id="u8D1F_u8F7D_u5747_u8861_u5B9E_u73B0_u65B9_u5F0F_u5C0F_u7ED3"><a href="#u8D1F_u8F7D_u5747_u8861_u5B9E_u73B0_u65B9_u5F0F_u5C0F_u7ED3" class="headerlink" title="负载均衡实现方式小结"></a>负载均衡实现方式小结</h3><p>下面简单总结一下负载均衡不同实现方式的优缺点：假如使用硬件的方式实现负载均衡，那么中间的转发机构就是硬件，这个时候运行的效率非常高，但是对应的成本也非常高。如果我们采用软件的方式来实现负载均衡，那么中间的转发机构就是软件，这个时候，运行效率不如硬件，但是成本相对来说低得多。而使用Nginx服务器实现负载均衡，那么就是通过软件的方式来实现负载均衡，并且Nginx本身支持高并发等。故而使用Nginx服务器实现负载均衡，能大大节约企业的成本，并且由于Nginx是服务器软件，其执行效率也是非常高。</p>
<p>上面就是所有内容，感觉还是很受益匪浅的。</p>
<h2 id="u53C2_u8003_uFF1A_u6781_u5BA2_u5B66_u9662Nginx_u53CD_u5411_u4EE3_u7406_u4E0E_u8D1F_u8F7D_u5747_u8861_u6559_u7A0B"><a href="#u53C2_u8003_uFF1A_u6781_u5BA2_u5B66_u9662Nginx_u53CD_u5411_u4EE3_u7406_u4E0E_u8D1F_u8F7D_u5747_u8861_u6559_u7A0B" class="headerlink" title="参考：极客学院Nginx反向代理与负载均衡教程"></a>参考：<a href="http://www.jikexueyuan.com/course/2163.html" target="_blank" rel="external">极客学院Nginx反向代理与负载均衡教程</a></h2><p><img src="/images/weixin.jpg" alt="微信"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天在<a href="http://www.jikexueyuan.com">极客学院</a>看了一部视频教程，主题是<code>Nginx反向代理与负载均衡</code>，看过之后连忙记录下来。<br>]]>
    
    </summary>
    
      <category term="nginx" scheme="http://gtskk.coding.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用Nwjs将web应用桌面化]]></title>
    <link href="http://gtskk.coding.io/2015/10/11/nw-software/"/>
    <id>http://gtskk.coding.io/2015/10/11/nw-software/</id>
    <published>2015-10-11T14:26:52.000Z</published>
    <updated>2015-10-28T07:40:15.007Z</updated>
    <content type="html"><![CDATA[<p><code>Nodejs</code>算是近期比较火的新秀了，用它制作网页也是及其的方便，学会了它，就可以说是真正的全栈工程师了。<img src="/images/emojis/smile.png" width="10" height="10" class="emoji emoji nofancybox" title="smile"><br><a id="more"></a><br><a href="http://nwjs.io/" target="_blank" rel="external">NW.js</a>源于Node-Webkit，通过它可以使用<code>html</code>和<code>javascript</code>书写原生应用了，而且一切和你写<code>web</code>应用几乎没有区别呢。</p>
<p>下面来体验一下吧。</p>
<h2 id="u5B89_u88C5NW-js"><a href="#u5B89_u88C5NW-js" class="headerlink" title="安装NW.js"></a>安装NW.js</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install nw -g</span><br></pre></td></tr></table></figure>
<h2 id="Hello_World"><a href="#Hello_World" class="headerlink" title="Hello World"></a>Hello World</h2><p>建立一个Hello World项目，从初做起，比如如下目录结构：</p>
<blockquote>
<p>nwjs-app/<br>├── app.js<br>├── index.html<br>├── package.json<br>└── style.css</p>
</blockquote>
<p>这里是一个简单的应用，实际<code>js</code>或<code>css</code>文件较多，或用到第三方的<code>js</code>或<code>css</code>，需要更好的组织目录，如<code>js</code>文件放在<code>script</code>子目录中，把<code>css</code>文件放在<code>style</code>子目录中。<br>package.json 内容：    </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"main"</span>: <span class="string">"index.html"</span>,</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"Hello NW.js"</span>,</span><br><span class="line">  <span class="string">"window"</span>: &#123;</span><br><span class="line">	<span class="string">"toolbar"</span>: <span class="literal">false</span> <span class="comment">//这个选项对于开发太重要了</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>index.html的内容如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span>Hello NW.js<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">type</span>=<span class="value">"text/css"</span> <span class="attribute">href</span>=<span class="value">"style.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"app.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h1</span>&gt;</span>Hello NW.js<span class="tag">&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>app.js的内容如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">'console app.js'</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">"out put from app.js"</span>);</span><br></pre></td></tr></table></figure>
<hr>
<p>未完待续…..</p>
<p><img src="/images/weixin.jpg" alt="微信"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><code>Nodejs</code>算是近期比较火的新秀了，用它制作网页也是及其的方便，学会了它，就可以说是真正的全栈工程师了。<img src="/images/emojis/smile.png" width="10" height="10" class="emoji emoji nofancybox" title="smile"><br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[是时候收心好好战斗了]]></title>
    <link href="http://gtskk.coding.io/2015/10/11/back-to-fight/"/>
    <id>http://gtskk.coding.io/2015/10/11/back-to-fight/</id>
    <published>2015-10-11T14:10:03.000Z</published>
    <updated>2015-10-28T07:40:15.006Z</updated>
    <content type="html"><![CDATA[<p>玩个一个国庆节假期，是时候收心好好战斗了，革命尚未成功，还要好好做该做的事儿。<br><img src="/images/play.jpg" alt="玩"><br><a id="more"></a><br>凡事有个计划还是好点儿的：</p>
<ol>
<li>好好收尾手上现有的一些项目，不要拖拉</li>
<li>努力提升自己，一方面为了更好的完成现有的工作，另一方面为了挑战更难的挑战</li>
<li><code>php</code>，<code>nodejs</code>这是两个很重要的方面，要重点抓好</li>
<li>多看一些心理学方面的书籍或者看一些贴吧里分享的经验，为了更好的了解他人以及自己</li>
</ol>
<p>四个目标，希望自己能好好完成……</p>
<p><img src="/images/weixin.jpg" alt="微信"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>玩个一个国庆节假期，是时候收心好好战斗了，革命尚未成功，还要好好做该做的事儿。<br><img src="/images/play.jpg" alt="玩"><br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[用gulp管理hexo]]></title>
    <link href="http://gtskk.coding.io/2015/09/21/gulp-hexo/"/>
    <id>http://gtskk.coding.io/2015/09/21/gulp-hexo/</id>
    <published>2015-09-21T15:35:26.000Z</published>
    <updated>2015-09-22T02:31:50.206Z</updated>
    <content type="html"><![CDATA[<p>本博客是采用<code>hexo</code>来制作的，然后一些图片优化，样式管理等是通过<code>gulp</code>来做的，于是就有了一个想法：把<code>hexo</code>有关的事情也放到<code>gulp</code>中去做，网上搜寻了好久，但没有现成的插件，因此自己动手写吧。<br><a id="more"></a></p>
<p>所以才有了下面的代码，记录分享下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">var</span> imagemin = <span class="built_in">require</span>(<span class="string">'gulp-imagemin'</span>);</span><br><span class="line"><span class="keyword">var</span> pngquant = <span class="built_in">require</span>(<span class="string">'imagemin-pngquant'</span>);</span><br><span class="line"><span class="keyword">var</span> imageminGifsicle = <span class="built_in">require</span>(<span class="string">'imagemin-gifsicle'</span>);</span><br><span class="line"><span class="keyword">var</span> imageminJpegtran = <span class="built_in">require</span>(<span class="string">'imagemin-jpegtran'</span>);</span><br><span class="line"><span class="keyword">var</span> Hexo = <span class="built_in">require</span>(<span class="string">'hexo'</span>),</span><br><span class="line">	hexo = <span class="keyword">new</span> Hexo(process.cwd(), &#123;&#125;); <span class="comment">// 初始化一个hexo对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理图片</span></span><br><span class="line">gulp.task(<span class="string">'img'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src([<span class="string">'src_images/*'</span>, <span class="string">'src_images/*/*'</span>])</span><br><span class="line">        .pipe(imagemin(&#123;</span><br><span class="line">            progressive: <span class="literal">true</span>,</span><br><span class="line">            svgoPlugins: [&#123;removeViewBox: <span class="literal">false</span>&#125;],</span><br><span class="line">            use: [pngquant(), imageminGifsicle(), imageminJpegtran()]</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'source/images'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下面就是hexo有关的操作，主要通过hexo.call()去执行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动Hexo服务器</span></span><br><span class="line">gulp.task(<span class="string">'server'</span>, [<span class="string">'img'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">	hexo.init().then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> hexo.call(<span class="string">'server'</span>, &#123;&#125;);</span><br><span class="line">	&#125;).catch(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">		<span class="built_in">console</span>.log(err);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 部署到服务器</span></span><br><span class="line">gulp.task(<span class="string">'deploy'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">	hexo.init().then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> hexo.call(<span class="string">'deploy'</span>, &#123;generate: <span class="literal">true</span>&#125;);</span><br><span class="line">	&#125;).catch(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">		<span class="built_in">console</span>.log(err);</span><br><span class="line">	&#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'img'</span>, <span class="string">'server'</span>]);</span><br></pre></td></tr></table></figure>
<p>代码注释已经写得很清楚，就这样吧。</p>
<p><img src="/images/weixin.jpg" alt="微信"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>本博客是采用<code>hexo</code>来制作的，然后一些图片优化，样式管理等是通过<code>gulp</code>来做的，于是就有了一个想法：把<code>hexo</code>有关的事情也放到<code>gulp</code>中去做，网上搜寻了好久，但没有现成的插件，因此自己动手写吧。<br>]]>
    
    </summary>
    
      <category term="经验分享" scheme="http://gtskk.coding.io/tags/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[《特殊失踪专案组：失踪的黑色M》无限反转]]></title>
    <link href="http://gtskk.coding.io/2015/09/17/teshusizongzhuanzu/"/>
    <id>http://gtskk.coding.io/2015/09/17/teshusizongzhuanzu/</id>
    <published>2015-09-17T12:45:53.000Z</published>
    <updated>2015-09-22T02:31:50.208Z</updated>
    <content type="html"><![CDATA[<p>无限反转，绝对反转到你服。<br><a id="more"></a></p>
<p>第一部让我服的电视剧，绝对让我服，无限反转，反转到你不服不行。</p>
<p>講述了調查1%失蹤案件的專案組員警和惡性犯罪嫌疑人之間對決的故事。FBI出身的天才精英刑警吉秀賢(金康宇 飾)和純度100%的本土老派勢力刑警吳大榮(朴熙順 飾)的搭檔將怎樣在一定期限內找出失蹤者並與前所未聞的惡性犯罪者抗衡的故事，以‘失蹤’為主題，不僅將描繪尋找失蹤者的過程，還將會是一段尋找社會丟失的正義、價值的旅程，是一部全新題材的刑偵劇。</p>
<p><img src="/images/tsszzaz.jpg" alt="特殊失踪专案组"></p>
<p><a href="http://www.douban.com/tag/OCN/?focus=movie" target="_blank" rel="external">OCN</a>出品，必属精品，依然没有打破这一定律，依旧那么的好看，强烈推荐。</p>
<p>每一个案子表面上看很简单，不过真正看起来，总是一个又一个反转让你惊叹不已，这才是真正的探案剧。</p>
<p>观看地址：<a href="http://www.bilibili.com/video/av2161408" title="特殊失踪专案组" target="_blank" rel="external">戳我</a></p>
<p><img src="/images/weixin.jpg" alt="微信"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>无限反转，绝对反转到你服。<br>]]>
    
    </summary>
    
      <category term="影视" scheme="http://gtskk.coding.io/tags/%E5%BD%B1%E8%A7%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[PHP与Excel的那些事]]></title>
    <link href="http://gtskk.coding.io/2015/09/15/php-excel-go/"/>
    <id>http://gtskk.coding.io/2015/09/15/php-excel-go/</id>
    <published>2015-09-15T14:48:15.000Z</published>
    <updated>2015-09-22T02:31:50.207Z</updated>
    <content type="html"><![CDATA[<p>经常会用到<code>php</code>进行开发，最近有个项目要读取Excel文件中的数据，另外还有将数据导出到Excel或者Csv文件中。<br>下面就一起来聊聊<code>php</code>与<code>excel</code>的那些事儿吧。<br><a id="more"></a></p>
<h2 id="u5B89_u88C5_u914D_u7F6E"><a href="#u5B89_u88C5_u914D_u7F6E" class="headerlink" title="安装配置"></a>安装配置</h2><p>首先，你需要打开<code>php_zip</code>扩展，找到你起作用的<code>php.ini</code>文件，并打开这个扩展，将<code>php</code>文件夹里面的<code>ext</code>文件夹中的<code>php_zip.dll</code>文件找到，并复制到system32系统文件夹中（具体要看你的配置方法）。启用了之后就会再出现</p>
<blockquote>
<p>&lt;Fatal error:Class ‘ZipArchive’ not found in …..</p>
</blockquote>
<p>的错误了。然后，就可以使用它了，最好的办法是看它自带的<code>Examples</code>示例文档，就可以大概知道它的基本用法了。</p>
<p>不过，在实际运用的过程中，还真是有不少坑的，下面就聊一下：</p>
<h2 id="u8BFB_u53D6Excel_u6587_u4EF6_u4E2D_u7684_u6570_u636E"><a href="#u8BFB_u53D6Excel_u6587_u4EF6_u4E2D_u7684_u6570_u636E" class="headerlink" title="读取Excel文件中的数据"></a>读取Excel文件中的数据</h2><p>在使用<a href="http://phpexcel.codeplex.com/" target="_blank" rel="external">PhpExcel</a>库读取<code>Excel</code>文件时，要切记的是：导入的文档最好是利用<code>Microsoft Office Excel</code>或者<code>WPS</code>等类似的文档软件生成的，不要使用<code>PHP</code>等语言生成的文件，可以通过<code>Sublime Text2</code>或者其他编辑器打开文件来识别，如打开是<code>Html</code>代码的则最好换掉。</p>
<h2 id="u5BFC_u51FA_u5230Excel_u6216_u8005Csv_u6587_u4EF6"><a href="#u5BFC_u51FA_u5230Excel_u6216_u8005Csv_u6587_u4EF6" class="headerlink" title="导出到Excel或者Csv文件"></a>导出到Excel或者Csv文件</h2><p>主要有以下几种方式：</p>
<ol>
<li>通过把Content-Type设置为application/octet-stream，可以把动态生成的内容当作文件来下载；<br>如：<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span>  </span><br><span class="line">	<span class="variable">$filename</span> = <span class="string">"document.txt"</span>;  </span><br><span class="line">	header(<span class="string">'Content-Type: application/octet-stream'</span>);  </span><br><span class="line">	header(<span class="string">'Content-Disposition: attachment; filename='</span> . <span class="variable">$filename</span>);  </span><br><span class="line">	<span class="keyword">print</span> <span class="string">"Hello!"</span>; </span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>2.使用<a href="http://phpexcel.codeplex.com/" target="_blank" rel="external">PhpExcel</a>库。getCol为递归实现的函数，用于根据数字返回对应的列号编码。因为导出的过程中需要指出行号，列号。行号为简单的数字，而列号则为“A-Z”的组合。为了方便二维数组的导入，根据列数自动得到列号编码。如“5”-&gt;“E”、“27”-&gt;“AZ”。</p>
<ol>
<li>使用PHPExcel等库，确实比较容易实现，但对大量数据的支持很不好，很容易到达PHP内存使用上限。还可以利用<code>fputcsv</code>写<code>CSV</code>文件的方法，直接向浏览器输出Excel文件。<br>如：</li>
</ol>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span>  </span><br><span class="line"><span class="comment">// 输出Excel文件头，可把user.csv换成你要的文件名  </span></span><br><span class="line">header(<span class="string">'Content-Type: application/vnd.ms-excel'</span>);  </span><br><span class="line">header(<span class="string">'Content-Disposition: attachment;filename="user.csv"'</span>);  </span><br><span class="line">header(<span class="string">'Cache-Control: max-age=0'</span>);     </span><br><span class="line"><span class="comment">// 从数据库中获取数据，为了节省内存，不要把数据一次性读到内存，从句柄中一行一行读即可  </span></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">'select * from tbl where ……'</span>;  </span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable">$db</span>-&gt;query(<span class="variable">$sql</span>);     </span><br><span class="line"><span class="comment">// 打开PHP文件句柄，php://output 表示直接输出到浏览器  </span></span><br><span class="line"><span class="variable">$fp</span> = fopen(<span class="string">'php://output'</span>, <span class="string">'a'</span>);    </span><br><span class="line"><span class="comment">// 输出Excel列名信息  </span></span><br><span class="line"><span class="variable">$head</span> = <span class="keyword">array</span>(<span class="string">'姓名'</span>, <span class="string">'性别'</span>, <span class="string">'年龄'</span>, <span class="string">'Email'</span>, <span class="string">'电话'</span>, <span class="string">'……'</span>);  </span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$head</span> <span class="keyword">as</span> <span class="variable">$i</span> =&gt; <span class="variable">$v</span>) &#123;  </span><br><span class="line">    <span class="comment">// CSV的Excel支持GBK编码，一定要转换，否则乱码  </span></span><br><span class="line">    <span class="variable">$head</span>[<span class="variable">$i</span>] = iconv(<span class="string">'utf-8'</span>, <span class="string">'gbk'</span>, <span class="variable">$v</span>);  </span><br><span class="line">&#125;    </span><br><span class="line"><span class="comment">// 将数据通过fputcsv写到文件句柄  </span></span><br><span class="line">fputcsv(<span class="variable">$fp</span>, <span class="variable">$head</span>);   </span><br><span class="line"><span class="comment">// 计数器  </span></span><br><span class="line"><span class="variable">$cnt</span> = <span class="number">0</span>;  </span><br><span class="line"><span class="comment">// 每隔$limit行，刷新一下输出buffer，不要太大，也不要太小  </span></span><br><span class="line"><span class="variable">$limit</span> = <span class="number">100000</span>;    </span><br><span class="line"><span class="comment">// 逐行取出数据，不浪费内存  </span></span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$row</span> = <span class="variable">$stmt</span>-&gt;fetch(Zend_Db::FETCH_NUM)) &#123;   </span><br><span class="line">    <span class="variable">$cnt</span> ++;  </span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$limit</span> == <span class="variable">$cnt</span>) &#123; </span><br><span class="line">        <span class="comment">//刷新一下输出buffer，防止由于数据过多造成问题  </span></span><br><span class="line">        ob_flush();  </span><br><span class="line">        flush();  </span><br><span class="line">        <span class="variable">$cnt</span> = <span class="number">0</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">   </span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$row</span> <span class="keyword">as</span> <span class="variable">$i</span> =&gt; <span class="variable">$v</span>) &#123;  </span><br><span class="line">        <span class="variable">$row</span>[<span class="variable">$i</span>] = iconv(<span class="string">'utf-8'</span>, <span class="string">'gbk'</span>, <span class="variable">$v</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">    fputcsv(<span class="variable">$fp</span>, <span class="variable">$row</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>先聊到这儿，有想到的再补充……</p>
<hr>
<p>参考：</p>
<p><a href="http://developer.51cto.com/art/200912/168322.htm" target="_blank" rel="external">使用PHPExcel要点解析</a><br><a href="http://www.cnblogs.com/fredshare/archive/2012/10/29/2744243.html" target="_blank" rel="external">PHP导出excel文件的几种方式</a></p>
<hr>
<p><img src="/images/weixin.jpg" alt="微信"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>经常会用到<code>php</code>进行开发，最近有个项目要读取Excel文件中的数据，另外还有将数据导出到Excel或者Csv文件中。<br>下面就一起来聊聊<code>php</code>与<code>excel</code>的那些事儿吧。<br>]]>
    
    </summary>
    
      <category term="PHP" scheme="http://gtskk.coding.io/tags/PHP/"/>
    
      <category term="教程" scheme="http://gtskk.coding.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[无题]]></title>
    <link href="http://gtskk.coding.io/2015/09/13/somebusy/"/>
    <id>http://gtskk.coding.io/2015/09/13/somebusy/</id>
    <published>2015-09-13T15:49:44.000Z</published>
    <updated>2015-09-22T02:31:50.207Z</updated>
    <content type="html"><![CDATA[<p>最近在忙于规划十一出去玩的事情，博客有些怠慢了。<br><a id="more"></a></p>
<p>十一本不该出去，不过还是觉得和几个小伙伴一起出去嗨一下，其实与其说是嗨，不如说是去折腾。</p>
<p>这次行程安排的必加满，不过对于我这种出远门不多的人来说，到时极好的，因为一次假期就可以见识多个地方，机会难得啊。</p>
<p>在假期之前，把该忙的事情都清理掉，带着一颗轻松的心，尽情去折腾玩的事吧。</p>
<p><code>年轻不要怕折腾</code>，嘿嘿。</p>
<p><img src="/images/weixin.jpg" alt="微信"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近在忙于规划十一出去玩的事情，博客有些怠慢了。<br>]]>
    
    </summary>
    
      <category term="随笔" scheme="http://gtskk.coding.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[不忘初心]]></title>
    <link href="http://gtskk.coding.io/2015/09/09/hold-on/"/>
    <id>http://gtskk.coding.io/2015/09/09/hold-on/</id>
    <published>2015-09-09T15:30:39.000Z</published>
    <updated>2015-09-22T02:31:50.207Z</updated>
    <content type="html"><![CDATA[<p>不忘初心，方得始终<br><img src="/images/hold-on.jpg" alt="不忘初心"><br><a id="more"></a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>不忘初心，方得始终<br><img src="/images/hold-on.jpg" alt="不忘初心"><br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Vim命令手册]]></title>
    <link href="http://gtskk.coding.io/2015/09/07/vim-cheat-sheet/"/>
    <id>http://gtskk.coding.io/2015/09/07/vim-cheat-sheet/</id>
    <published>2015-09-07T15:58:41.000Z</published>
    <updated>2015-09-22T02:31:50.208Z</updated>
    <content type="html"><![CDATA[<p>今天闲来无事，正好看到了<code>Sublime</code>快捷键的手册，地址：<a href="http://sublime.emptystack.net/" target="_blank" rel="external">Sublime</a>，所以就萌生了做一个<br><code>Vim</code>命令手册的念头，说干就干。<br><a id="more"></a></p>
<p>该项目主要用了<a href="https://github.com/jamietre/ImageMapster" target="_blank" rel="external">ImageMapster</a>，通过<code>ImageMapster</code>，图像地图可以被用的更加<br>出色，不再只是以前那种普普通通的显示效果了。</p>
<p>先无图无真相：<br><img src="/images/vimCheatSheet.png" alt="Vim Cheat Sheet"></p>
<p>鼠标放在左边特定的命令上，会有详细的解释<code>tooltip</code>，上面的vim指令可能不是很全，不过已经包含大多数的使用方法了。</p>
<p>感谢图片的制作者：<code>vgod</code>以及<code>ImageMapster</code>的奉献者。</p>
<p>Cheet Sheet地址：<a href="http://vim.coding.io" target="_blank" rel="external">Vim Cheet Sheet Web</a><br>项目Github地址：<a href="https://github.com/Gtskk/vim-cheatsheet" target="_blank" rel="external">Github</a><br>如果有什么问题或者建议，请到：<a href="https://github.com/Gtskk/vim-cheatsheet/issues" target="_blank" rel="external">说点啥</a></p>
<p><img src="/images/weixin.jpg" alt="微信"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天闲来无事，正好看到了<code>Sublime</code>快捷键的手册，地址：<a href="http://sublime.emptystack.net/">Sublime</a>，所以就萌生了做一个<br><code>Vim</code>命令手册的念头，说干就干。<br>]]>
    
    </summary>
    
      <category term="分享" scheme="http://gtskk.coding.io/tags/%E5%88%86%E4%BA%AB/"/>
    
      <category term="开源" scheme="http://gtskk.coding.io/tags/%E5%BC%80%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[随手传播正能量]]></title>
    <link href="http://gtskk.coding.io/2015/09/05/fantastic-joke/"/>
    <id>http://gtskk.coding.io/2015/09/05/fantastic-joke/</id>
    <published>2015-09-05T15:21:27.000Z</published>
    <updated>2015-09-06T14:13:22.946Z</updated>
    <content type="html"><![CDATA[<p>阅兵小长假，正好也变成了同学之间聚会的好时光，我也出去逛了一把。<br><a id="more"></a></p>
<p>都说“三人行必有我师焉”，不过生活中大师还真是不少，“随手传播正能量”。</p>
<p>每次聚会，都觉得是叙旧+找打击+找动力，总体觉得挺好。</p>
<p>。。。。。</p>
<p><img src="/images/weixin.jpg" alt="微信"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>阅兵小长假，正好也变成了同学之间聚会的好时光，我也出去逛了一把。<br>]]>
    
    </summary>
    
      <category term="搞笑" scheme="http://gtskk.coding.io/tags/%E6%90%9E%E7%AC%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[利用NodeSchool工具创建教程学习工具系列5]]></title>
    <link href="http://gtskk.coding.io/2015/09/02/build-a-workshopper-series-5/"/>
    <id>http://gtskk.coding.io/2015/09/02/build-a-workshopper-series-5/</id>
    <published>2015-09-02T15:53:26.000Z</published>
    <updated>2015-09-06T14:13:22.946Z</updated>
    <content type="html"><![CDATA[<p>这是利用NodeSchool工具创建教程学习工具系列之四，上一部分见<a href="/2015/08/28/build-a-workshopper-series-4/">利用NodeSchool工具创建教程学习工具系列4</a>。<br><a id="more"></a></p>
<p>今天完成了<code>learnyounode</code>，版本为0.0.8，目前的主要功能有：</p>
<ol>
<li>学习<code>python</code>的<code>str</code>,<code>list</code>,<code>dict</code>以及正则表达式的运用，目前总共有6个挑战</li>
<li>已发布到官方<code>npm</code>平台，地址为：<a href="https://www.npmjs.com/package/learnyoupython" title="learnyoupython" target="_blank" rel="external">learnyoupython</a></li>
<li>目前只支持中文，其他语言版本暂不考虑开发</li>
</ol>
<p><img src="/images/learnpython.png" alt="learnyoupython-img"></p>
<h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><p>Github地址：<a href="https://github.com/Gtskk/learnyoupython" target="_blank" rel="external">Github</a></p>
<p>欢迎大家提出issue，或者来点儿<strong>star</strong></p>
<p><img src="/images/weixin.jpg" alt="微信"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这是利用NodeSchool工具创建教程学习工具系列之四，上一部分见<a href="/2015/08/28/build-a-workshopper-series-4/">利用NodeSchool工具创建教程学习工具系列4</a>。<br>]]>
    
    </summary>
    
      <category term="教程" scheme="http://gtskk.coding.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[重拾PHP之路系列2]]></title>
    <link href="http://gtskk.coding.io/2015/09/01/review-php-series2/"/>
    <id>http://gtskk.coding.io/2015/09/01/review-php-series2/</id>
    <published>2015-09-01T13:23:53.000Z</published>
    <updated>2015-09-02T06:06:49.871Z</updated>
    <content type="html"><![CDATA[<p>突然觉得要重拾一门语言还真不是个省力的事儿，没办法啦，也只有一步步走下去喽。</p>
<p><code>路漫漫其修远兮，吾将上下而求索</code></p>
<p><img src="/images/road.jpg" alt="路"><br><a id="more"></a><br>实在想不出，明天再 补上吧</p>
<p><img src="/images/weixin.jpg" alt="微信"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>突然觉得要重拾一门语言还真不是个省力的事儿，没办法啦，也只有一步步走下去喽。</p>
<p><code>路漫漫其修远兮，吾将上下而求索</code></p>
<p><img src="/images/road.jpg" alt="路"><br>]]>
    
    </summary>
    
      <category term="PHP" scheme="http://gtskk.coding.io/tags/PHP/"/>
    
      <category term="教程" scheme="http://gtskk.coding.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[重拾PHP之路系列1]]></title>
    <link href="http://gtskk.coding.io/2015/08/30/review-php/"/>
    <id>http://gtskk.coding.io/2015/08/30/review-php/</id>
    <published>2015-08-30T14:43:10.000Z</published>
    <updated>2015-09-02T06:06:49.872Z</updated>
    <content type="html"><![CDATA[<p>今天看了许多PHP大神写的文章，真的深有感触，觉得PHP学习之路自己前行的太短太短，真的要好好审视一下了。<br><a id="more"></a></p>
<p>其实自己PHP学了也有不少时间了，不过今天自己回想了一下，感觉肚子里没留存太多东西，看着大神们写的东西，<br>不断有自己不懂的东西浮现出来，唉，太伤心了，不过也很高兴，觉得早发现才能早补救。</p>
<p>因此，接下来准备来个<code>重拾PHP之路</code>系列<img src="/images/emojis/laughing.png" width="18" height="18" class=" emoji nofancybox" title="laughing"><img src="/images/emojis/laughing.png" width="18" height="18" class=" emoji nofancybox" title="laughing">，这是第一篇。</p>
<p>先简单说下自己的计划吧：</p>
<p>1.补一下PHP理论知识，就看这个<a href="http://www.kancloud.cn/phpxy/phpbook/33183" target="_blank" rel="external">PHP入门圣经</a><br>2.深入研究一个框架，我认准<a href="http://laravel.com/" target="_blank" rel="external">Laravel</a>，<a href="http://laravelacademy.org/post/153.html" target="_blank" rel="external">Laravel资源</a>这个我喜欢<br>3.服务器要懂啊，Nginx，Apache什么的，懂？<br>4.数据库要会用啊，特别是设计，不会玩个卵子<br>5.升华一下：</p>
<blockquote>
<p>第一阶段：基础阶段（基础PHP程序员）</p>
<p>重点：把LNMP搞熟练（核心是安装配置基本操作）</p>
<p>目标：能够完成基本的LNMP系统安装，简单配置维护；能够做基本的简单系统的PHP开发；能够在PHP中型系统中支持某个PHP功能模块的开发。</p>
<p>时间：完成本阶段的时间因人而异，有的成长快半年一年就过了，成长慢的两三年也有。</p>
<blockquote>
<p>1.Linux： </p>
<p>基本命令、操作、启动、基本服务配置（包括rpm安装文件，各种服务配置等）；会写简单的shell脚本和awk/sed 脚本命令等。</p>
<p>2.Nginx： </p>
<p>做到能够安装配置nginx+php，知道基本的nginx核心配置选项，知道 server/fastcgi_pass/access_log 等基础配置，目标是能够让nginx+php_fpm顺利工作。</p>
<p>3.MySQL： </p>
<p>会自己搭建mysql，知道基本的mysql配置选项；知道innodb和myisam的区别，知道针对InnoDB和MyISAM两个引擎的不同配置选项；知道基本的两个引擎的差异和选择上面的区别；能够纯手工编译搭建一个MySQL数据库并且配置好编码等正常稳定运行；核心主旨是能够搭建一个可运行的MySQL数据库。</p>
<p>4.PHP：</p>
<p>基本语法数组、字符串、数据库、XML、Socket、GD/ImageMgk图片处理等等；熟悉各种跟MySQL操作链接的api（mysql/mysqli/PDO)，知道各种编码问题的解决；知道常规熟练使用的PHP框架（ThinkPHP、Zendframework、Yii、Yaf等）；了解基本MVC的运行机制和为什么这么做，稍微知道不同的PHP框架之间的区别；能够快速学习一个MVC框架。能够知道开发工程中的文件目录组织，有基本的良好的代码结构和风格，能够完成小系统的开发和中型系统中某个模块的开发工作。</p>
<p>5.前端：</p>
<p>如果条件时间允许，可以适当学习下 HTML/CSS/JS 等相关知识，知道什么web标准，div+css的web/wap页面模式，知道HTML5和HTML4的区别；了解一些基本的前端只是和JS框架（jQuery之类的）；了解一些基本的JavaScript编程知识；（本项不是必须项，如果有时间，稍微了解一下是可以的，不过不建议作为重点，除非个人有强烈兴趣）</p>
<p>6.系统设计：</p>
<p>能够完成小型系统的基本设计，包括简单的数据库设计，能够完成基本的：浏览器 -&gt; Nginx+PHP -&gt; 数据库 架构的设计开发工作；能够支撑每天几十万到数百万流量网站的开发维护工作；</p>
</blockquote>
<p>第二阶段：提高阶段 （中级PHP程序员）</p>
<p>重点：提高针对LNMP的技能，能够更全面的对LNMP有熟练的应用。</p>
<p>目标：能够随时随地搭建好LNMP环境，快速完成常规配置；能够追查解决大部分遇到的开发和线上环境的问题；能够独立承担中型系统的构架和开发工作；能够在大型系统中承担某个中型模块的开发工作；</p>
<blockquote>
<ol>
<li>Linux: </li>
</ol>
<p>在第一阶段的基础上面，能够流畅的使用Shell脚本来完成很多自动化的工作；awk/sed/perl 也操作的不错，能够完成很多文本处理和数据统计等工作；基本能够安装大部分非特殊的Linux程序（包括各种库、包、第三方依赖等等，比如MongoDB/Redis/Sphinx/Luncene/SVN之类的）；了解基本的Linux服务，知道如何查看Linux的性能指标数据，知道基本的Linux下面的问题跟踪等。</p>
<ol>
<li>Nginx: </li>
</ol>
<p>在第一阶段的基础上面，了解复杂一些的Nginx配置；包括 多核配置、events、proxy<em>pass，sendfile/tcp</em>*配置，知道超时等相关配置和性能影响；知道nginx除了web server，还能够承担代理服务器、反向静态服务器等配置；知道基本的nginx配置调优；知道如何配置权限、编译一个nginx扩展到nginx；知道基本的nginx运行原理（master/worker机制，epoll），知道为什么nginx性能比apache性能好等知识；</p>
<ol>
<li>MySQL/MongoDB：</li>
</ol>
<p>在第一阶段的基础上面，在MySQL开发方面，掌握很多小技巧，包括常规SQL优化（group by/order by/rand优化等）；除了能够搭建MySQL，还能够冷热备份MySQL数据，还知道影响innodb/myisam性能的配置选项（比如key_buffer/query_cache/sort_buffer/innodb_buffer_pool_size/innodb_flush_log_at_trx_commit等），也知道这些选项配置成为多少值合适；另外也了解一些特殊的配置选项，比如  知道如何搭建mysql主从同步的环境，知道各个binlog_format的区别；知道MySQL的性能追查，包括slow_log/explain等，还能够知道基本的索引建立处理等知识；原理方面了解基本的MySQL的架构（Server+存储引擎），知道基本的InnoDB/MyISAM索引存储结构和不同（聚簇索引，B树）；知道基本的InnoDB事务处理机制；了解大部分MySQL异常情况的处理方案（或者知道哪儿找到处理方案）。条件允许的情况，建议了解一下NoSQL的代表MongoDB数据库，顺便对比跟MySQL的差别，同事能够在合适的应用场景安全谨慎的使用MongoDB，知道基本的PHP与MongoDB的结合开发。</p>
<ol>
<li>Redis/Memcached：</li>
</ol>
<p>在大部分中型系统里面一定会涉及到缓存处理，所以一定要了解基本的缓存；知道Memcached和Redis的异同和应用场景，能够独立安装 Redis/Memcached，了解Memcahed的一些基本特性和限制，比如最大的value值，知道PHP跟他们的使用结合；Redis了解基本工作原理和使用，了解常规的数据类型，知道什么场景应用什么类型，了解Redis的事务等等。原理部分，能够大概了解Memcached的内存结构（slab机制），redis就了解常用数据类型底层实现存储结构（SDS/链表/SkipList/HashTable）等等，顺便了解一下Redis的事务、RDB、AOF等机制更好 </p>
<ol>
<li>PHP：</li>
</ol>
<p>除了第一阶段的能力，安装配置方面能够随意安装PHP和各种第三方扩展的编译安装配置；了解php-fpm的大部分配置选项和含义（如max_requests/max_children/request_terminate_timeout之类的影响性能的配置），知道mod_php/fastcgi的区别；在PHP方面已经能够熟练各种基础技术，还包括各种深入些的PHP，包括对PHP面向对象的深入理解/SPL/语法层面的特殊特性比如反射之类的；在框架方面已经阅读过最少一个以上常规PHP MVC框架的代码了，知道基本PHP框架内部实现机制和设计思想；在PHP开发中已经能够熟练使用常规的设计模式来应用开发（抽象工厂/单例/观察者/命令链/策略/适配器 等模式）；建议开发自己的PHP MVC框架来充分让开发自由化，让自己深入理解MVC模式，也让自己能够在业务项目开发里快速升级；熟悉PHP的各种代码优化方法，熟悉大部分PHP安全方面问题的解决处理；熟悉基本的PHP执行的机制原理（Zend引擎/扩展基本工作机制）；</p>
<ol>
<li>C/C++： </li>
</ol>
<p>开始涉猎一定的C/C++语言，能够写基本的C/C++代码，对基本的C/C++语法熟悉（指针、数组操作、字符串、常规标准API）和数据结构（链表、树、哈希、队列）有一定的熟悉下；对Linux下面的C语言开发有基本的了解概念，会简单的makefile文件编写，能够使用简单的GCC/GDB的程序编译简单调试工作；对基本的网络编程有大概了解。（本项是为了向更高层次打下基础）</p>
<ol>
<li>前端：</li>
</ol>
<p>在第一阶段的基础上面，熟悉基本的HTTP协议（协议代码200/300/400/500，基本的HTTP交互头）；条件允许，可以在深入写出稍微优雅的HTML+CSS+JavaScript，或者能够大致简单使用某些前端框架（jQuery/YUI/ExtJS/RequireJS/BootStrap之类）；如果条件允许，可以深入学习JavaScript编程，比如闭包机制、DOM处理；再深入些可以读读jQuery源码做深入学习。（本项不做重点学习，除非对前端有兴趣）</p>
<ol>
<li>系统设计：</li>
</ol>
<p>能够设计大部分中型系统的网站架构、数据库、基本PHP框架选型；性能测试排查处理等；能够完成类似：浏览器 -&gt; CDN(Squid) -&gt; Nginx+PHP -&gt; 缓存 -&gt; 数据库 结构网站的基本设计开发维护；能够支撑每天数百万到千万流量基本网站的开发维护工作； </p>
</blockquote>
<p>第三阶段：高级阶段 （高级PHP程序员）</p>
<p>重点：除了基本的LNMP程序，还能够在某个方向或领域有深入学习。（纵深维度发展）</p>
<p>目标：除了能够完成基本的PHP业务开发，还能够解决大部分深入复杂的技术问题，并且可以独立设计完成中大型的系统设计和开发工作；自己能够独立hold深入某个技术方向，在这块比较专业。（比如在MySQL、Nginx、PHP、Redis等等任一方向深入研究）</p>
<blockquote>
<ol>
<li>Linux：</li>
</ol>
<p>除了第二阶段的能力，在Linux下面除了常规的操作和性能监控跟踪，还能够使用很多高级复杂的命令完成工作（watch/tcpdump/starce/ldd/ar等)；在shell脚本方面，已经能够编写比较复杂的shell脚本（超过500行）来协助完成很多包括备份、自动化处理、监控等工作的shell；对awk/sed/perl 等应用已经如火纯青，能够随意操作控制处理文本统计分析各种复杂格式的数据；对Linux内部机制有一些了解，对内核模块加载，启动错误处理等等有个基本的处理；同时对一些其他相关的东西也了解，比如NFS、磁盘管理等等；</p>
<ol>
<li>Nginx: </li>
</ol>
<p>在第二阶段的基础上面，已经能够把Nginx操作的很熟练，能够对Nginx进行更深入的运维工作，比如监控、性能优化，复杂问题处理等等；看个人兴趣，更多方面可以考虑侧重在关于Nginx工作原理部分的深入学习，主要表现在阅读源码开始，比如具体的master/worker工作机制，Nginx内部的事件处理，内存管理等等；同时可以学习Nginx扩展的开发，可以定制一些自己私有的扩展；同时可以对Nginx+Lua有一定程度的了解，看看是否可以结合应用出更好模式；这个阶段的要求是对Nginx原理的深入理解，可以考虑成为Nginx方向的深入专业者。</p>
<ol>
<li>MySQL/MongoDB：</li>
</ol>
<p>在第二阶段的基础上面，在MySQL应用方面，除了之前的基本SQL优化，还能够在完成一些复杂操作，比如大批量数据的导入导出，线上大批量数据的更改表结构或者增删索引字段等等高危操作；除了安装配置，已经能够处理更多复杂的MySQL的问题，比如各种问题的追查，主从同步延迟问题的解决、跨机房同步数据方案、MySQL高可用架构等都有涉及了解；对MySQL应用层面，对MySQL的核心关键技术比较熟悉，比如事务机制（隔离级别、锁等）、对触发器、分区等技术有一定了解和应用；对MySQL性能方面，有包括磁盘优化（SAS迁移到SSD）、服务器优化（内存、服务器本身配置）、除了二阶段的其他核心性能优化选项（innodb_log_buffer_size/back_log/table_open_cache/thread_cache_size/innodb_lock_wait_timeout等）、连接池软件选择应用，对show *（show status/show profile）类的操作语句有深入了解，能够完成大部分的性能问题追查；MySQL备份技术的深入熟悉，包括灾备还原、对Binlog的深入理解，冷热备份，多IDC备份等；在MySQL原理方面，有更多了解，比如对MySQL的工作机制开始阅读部分源码，比如对主从同步（复制）技术的源码学习，或者对某个存储引擎（MyISAM/Innodb/TokuDB）等等的源码学习理解，如果条件允许，可以参考CSV引擎开发自己简单的存储引擎来保存一些数据，增强对MySQL的理解；在这个过程，如果自己有兴趣，也可以考虑往DBA方向发展。MongoDB层面，可以考虑比如说在写少读多的情况开始在线上应用MongoDB，或者是做一些线上的数据分析处理的操作，具体场景可以按照工作来，不过核心是要更好的深入理解RMDBS和NoSQL的不同场景下面的应用，如果条件或者兴趣允许，可以开始深入学习一下MongoDB的工作机制。</p>
<ol>
<li>Redis/Memcached：</li>
</ol>
<p>在第二阶段的基础上面，能够更深入的应用和学习。因为Memcached不是特别复杂，建议可以把源码进行阅读，特别是内存管理部分，方便深入理解；Redis部分，可以多做一些复杂的数据结构的应用（zset来做排行榜排序操作/事务处理用来保证原子性在秒杀类场景应用之类的使用操作）；多涉及aof等同步机制的学习应用，设计一个高可用的Redis应用架构和集群；建议可以深入的学习一下Redis的源码，把在第二阶段积累的知识都可以应用上，特别可以阅读一下包括核心事件管理、内存管理、内部核心数据结构等充分学习了解一下。如果兴趣允许，可以成为一个Redis方面非常专业的使用者。</p>
<ol>
<li>PHP：</li>
</ol>
<p>作为基础核心技能，我们在第二阶段的基础上面，需要有更深入的学习和应用。从基本代码应用上面来说，能够解决在PHP开发中遇到95%的问题，了解大部分PHP的技巧；对大部分的PHP框架能够迅速在一天内上手使用，并且了解各个主流PHP框架的优缺点，能够迅速方便项目开发中做技术选型；在配置方面，除了常规第二阶段会的知识，会了解一些比较偏门的配置选项（php auto_prepend_file/auto_append_file），包括扩展中的一些复杂高级配置和原理（比如memcached扩展配置中的memcache.hash_strategy、apc扩展配置中的apc.mmap_file_mask/apc.slam_defense/apc.file_update_protection之类的）；对php的工作机制比较了解，包括php-fpm工作机制（比如php-fpm在不同配置机器下面开启进程数量计算以及原理），对zend引擎有基本熟悉（vm/gc/stream处理），阅读过基本的PHP内核源码（或者阅读过相关文章），对PHP内部机制的大部分核心数据结构（基础类型/Array/Object）实现有了解，对于核心基础结构（zval/hashtable/gc）有深入学习了解；能够进行基本的PHP扩展开发，了解一些扩展开发的中高级知识（minit/rinit等），熟悉php跟apache/nginx不同的通信交互方式细节（mod_php/fastcgi）；除了开发PHP扩展，可以考虑学习开发Zend扩展，从更底层去了解PHP。</p>
<ol>
<li>C/C++：</li>
</ol>
<p>在第二阶段基础上面，能够在C/C++语言方面有更深入的学习了解，能够完成中小型C/C++系统的开发工作；除了基本第二阶段的基础C/C++语法和数据结构，也能够学习一些特殊数据结构（b-tree/rb-tree/skiplist/lsm-tree/trie-tree等）方便在特殊工作中需求；在系统编程方面，熟悉多进程、多线程编程；多进程情况下面了解大部分多进程之间的通信方式，能够灵活选择通信方式（共享内存/信号量/管道等）；多线程编程能够良好的解决锁冲突问题，并且能够进行多线程程序的开发调试工作；同时对网络编程比较熟悉，了解多进程模型/多线程模型/异步网络IO模型的差别和选型，熟悉不同异步网络IO模型的原理和差异（select/poll/epoll/iocp等），并且熟悉常见的异步框架（ACE/ICE/libev/libevent/libuv/Boost.ASIO等）和使用，如果闲暇也可以看看一些国产自己开发的库（比如muduo）；同时能够设计好的高并发程序架构（leader-follow/master-worker等）；了解大部分C/C++后端Server开发中的问题（内存管理、日志打印、高并发、前后端通信协议、服务监控），知道各个后端服务RPC通信问题（struct/http/thirft/protobuf等）；能够更熟络的使用GCC和GDB来开发编译调试程序，在线上程序core掉后能够迅速追查跟踪解决问题；通用模块开发方面，可以积累或者开发一些通用的工具或库（比如异步网络框架、日志库、内存池、线程池等），不过开发后是否应用要谨慎，省的埋坑去追bug；</p>
<ol>
<li>前端：</li>
</ol>
<p>深入了解HTTP协议（包括各个细致协议特殊协议代码和背后原因，比如302静态文件缓存了，502是nginx后面php挂了之类的）；除了之前的前端方面的各种框架应用整合能力，前端方面的学习如果有兴趣可以更深入，表现形式是，可以自己开发一些类似jQuery的前端框架，或者开发一个富文本编辑器之类的比较琐碎考验JavaScript功力；</p>
<ol>
<li>其他领域语言学习：</li>
</ol>
<p>在基础的PHP/C/C++语言方面有基本积累，建议在当前阶段可以尝试学习不同的编程语言，看个人兴趣爱好，脚本类语言可以学学 Python/Ruby 之类的，函数式编程语言可以试试 Lisp/Haskell/Scala/Erlang 之类的，静态语言可以试试 Java/Golang，数据统计分析可以了解了解R语言，如果想换个视角做后端业务，可以试试 Node.js还有前面提到的跟Nginx结合的Nginx_Lua等。学习不同的语言主要是提升自己的视野和解决问题手段的差异，比如会了解除了进程/线程，还有轻量级协程；比如在跨机器通信场景下面，Erlang的解决方案简单的惊人；比如在不想选择C/C++的情况下，还有类似高效的Erlang/Golang可用等等；主要是提升视野。</p>
<ol>
<li>其他专业方向学习：</li>
</ol>
<p>在本阶段里面，会除了基本的LNMP技能之外，会考虑一些其他领域知识的学习，这些都是可以的，看个人兴趣和长期的目标方向。目前情况能够选择的领域比较多，比如、云计算（分布式存储、分布式计算、虚拟机等），机器学习（数据挖掘、模式识别等，应用到统计、个性化推荐），自然语言处理（中文分词等），搜索引擎技术、图形图像、语音识别等等。除了这些高大上的，也有很多偏工程方面可以学习的地方，比如高性能系统、移动开发（Android/IOS）、计算机安全、嵌入式系统、硬件等方向。</p>
<ol>
<li>系统设计：</li>
</ol>
<p>系统设计在第二阶段的基础之上，能够应用掌握的经验技能，设计出比较复杂的中大型系统，能够解决大部分线上的各种复杂系统的问题，完成类似 浏览器 -&gt; CDN -&gt; 负载均衡 -&gt;接入层 -&gt; Nginx+PHP -&gt; 业务缓存 -&gt; 数据库 -&gt; 各路复杂后端RPC交互（存储后端、逻辑后端、反作弊后端、外部服务） -&gt; 更多后端 酱紫的复杂业务；能够支撑每天数千万到数亿流量网站的正常开发维护工作。</p>
</blockquote>
<p>第四阶段：架构阶段 （架构师）</p>
<p>ps: 暂时不展开讨论，等下次专门撰文来描述补充本部分内容</p>
<p>第五阶段：专家阶段（方向领域专家）</p>
<p>ps：高大上，这块不展开讨论 ^_^</p>
<p>第六阶段：科学家阶段</p>
<p>ps：高大上，这块不展开讨论 ^_^</p>
</blockquote>
<p><code>上面一部分内容转载自<a href="http://wenda.phpxy.com/q_73.html" title="10分钟学院问答" target="_blank" rel="external">10分钟学院</a></code></p>
<p>就这样吧，一步一步脚踏实地干吧。</p>
<p><img src="/images/weixin.jpg" alt="微信"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天看了许多PHP大神写的文章，真的深有感触，觉得PHP学习之路自己前行的太短太短，真的要好好审视一下了。<br>]]>
    
    </summary>
    
      <category term="PHP" scheme="http://gtskk.coding.io/tags/PHP/"/>
    
      <category term="教程" scheme="http://gtskk.coding.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[利用NodeSchool工具创建教程学习工具系列4]]></title>
    <link href="http://gtskk.coding.io/2015/08/28/build-a-workshopper-series-4/"/>
    <id>http://gtskk.coding.io/2015/08/28/build-a-workshopper-series-4/</id>
    <published>2015-08-28T15:55:11.000Z</published>
    <updated>2015-09-02T06:06:49.866Z</updated>
    <content type="html"><![CDATA[<p>这是利用NodeSchool工具创建教程学习工具系列之四，上一部分见<a href="/2015/08/26/build-a-workshopper-series-3/">利用NodeSchool工具创建教程学习工具系列3</a>。<br><a id="more"></a></p>
<p>最近刚完成了<code>learnyoupython</code>，地址在：<a href="https://github.com/Gtskk/learnyoupython" target="_blank" rel="external">戳我</a></p>
<p>目前实现了如下功能：</p>
<ol>
<li>5个练习以及相应的运行以及<code>verify</code>功能</li>
<li>目前只支持中文，其他语言可能等最后才会考虑</li>
<li>通过npm进行包管理，目前还没决定上传到官方<code>npmjs</code>上，等功能更全面了再上。</li>
</ol>
<p><img src="/images/weixin.jpg" alt="微信"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这是利用NodeSchool工具创建教程学习工具系列之四，上一部分见<a href="/2015/08/26/build-a-workshopper-series-3/">利用NodeSchool工具创建教程学习工具系列3</a>。<br>]]>
    
    </summary>
    
      <category term="教程" scheme="http://gtskk.coding.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[那些年迷过的结局出乎意料的悬疑电影续集]]></title>
    <link href="http://gtskk.coding.io/2015/08/27/unexpected-result-films-again/"/>
    <id>http://gtskk.coding.io/2015/08/27/unexpected-result-films-again/</id>
    <published>2015-08-27T12:47:58.000Z</published>
    <updated>2015-09-02T06:06:49.872Z</updated>
    <content type="html"><![CDATA[<p>这是<a href="/2015/08/24/upexpected-result-films/">那些年迷过的结局出乎意料的悬疑电影</a>的续帖，继续分享好电影。<br><a id="more"></a></p>
<h3 id="6-__u300A_u6740_u4EBA_u56DE_u5FC6_u300B"><a href="#6-__u300A_u6740_u4EBA_u56DE_u5FC6_u300B" class="headerlink" title="6. 《杀人回忆》"></a>6. 《杀人回忆》</h3><p>总觉得离真相很近了，而真相却是没有真相。在一个法制混乱的年代里，任何一个普通人都有可能成为罪犯和恶魔。影片的焦点从不在<br>连环杀人案本身，主线是每个人深陷泥潭的不能自拔，副线则是当时整个韩国社会的动荡不安，时间的推移不能洗刷罪恶，宋康昊结尾<br>处的眼神映射出无限的沧桑。没有结局的结局才是最耐人寻味的。</p>
<p>豆瓣链接：<a href="http://movie.douban.com/subject/1300299/" target="_blank" rel="external">杀人回忆</a><br>豆瓣评分：8.5</p>
<p><img src="/images/sharenhuiyi.jpg" alt="杀人回忆封面图"></p>
<h3 id="7-__u300A_u7194_u7089_u300B"><a href="#7-__u300A_u7194_u7089_u300B" class="headerlink" title="7. 《熔炉》"></a>7. 《熔炉》</h3><p>一句话概括：我们无法改变世界，但我们可以选择不被世界改变……</p>
<p>豆瓣链接：(不晓得为啥没了？？？)<br>豆瓣评分：9.1</p>
<p><img src="/images/ronglu.jpg" alt="熔炉封面图"></p>
<h3 id="8-__u300A_u6293_u4F4F_u90A3_u4E2A_u5BB6_u4F19_u300B"><a href="#8-__u300A_u6293_u4F4F_u90A3_u4E2A_u5BB6_u4F19_u300B" class="headerlink" title="8. 《抓住那个家伙》"></a>8. 《抓住那个家伙》</h3><p>有时知道真相反而更加悲伤……</p>
<p>豆瓣链接：<a href="http://movie.douban.com/subject/21937438/" target="_blank" rel="external">抓住那个家伙</a><br>豆瓣评分：7.9</p>
<p><img src="/images/zhuazhunagejiahuo.jpg" alt="黄海封面图"></p>
<h3 id="9-__u300A_u7D20_u5A9B_u300B"><a href="#9-__u300A_u7D20_u5A9B_u300B" class="headerlink" title="9. 《素媛》"></a>9. 《素媛》</h3><p>受过伤害的人总是笑得最开心的，因为他们不愿意让身边的人承受一样的痛苦。</p>
<p>豆瓣链接：<a href="http://movie.douban.com/subject/21937452/" target="_blank" rel="external">素媛</a><br>豆瓣评分：9.0</p>
<p><img src="/images/suyuan.jpg" alt="素媛封面图"></p>
<h3 id="10-__u300A_u4E0D_u53EF_u9976_u6055_u300B"><a href="#10-__u300A_u4E0D_u53EF_u9976_u6055_u300B" class="headerlink" title="10. 《不可饶恕》"></a>10. 《不可饶恕》</h3><p>永远都有更没下限的复杂……</p>
<p>豆瓣链接：<a href="http://movie.douban.com/subject/3992381/" target="_blank" rel="external">不可饶恕</a><br>豆瓣评分：7.7</p>
<p><img src="/images/bukeraosu.jpg" alt="不可饶恕封面图"></p>
<h2 id="u6301_u7EED_u66F4_u65B0_u2026_u2026"><a href="#u6301_u7EED_u66F4_u65B0_u2026_u2026" class="headerlink" title="持续更新……"></a>持续更新……</h2><p><img src="/images/weixin.jpg" alt="微信"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这是<a href="/2015/08/24/upexpected-result-films/">那些年迷过的结局出乎意料的悬疑电影</a>的续帖，继续分享好电影。<br>]]>
    
    </summary>
    
      <category term="影视" scheme="http://gtskk.coding.io/tags/%E5%BD%B1%E8%A7%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[利用NodeSchool工具创建教程学习工具系列3]]></title>
    <link href="http://gtskk.coding.io/2015/08/26/build-a-workshopper-series-3/"/>
    <id>http://gtskk.coding.io/2015/08/26/build-a-workshopper-series-3/</id>
    <published>2015-08-26T12:55:51.000Z</published>
    <updated>2015-09-02T06:06:49.865Z</updated>
    <content type="html"><![CDATA[<p>这是利用NodeSchool工具创建教程学习工具系列之三，上一部分见<a href="/2015/08/23/build-a-workshopper-series-2/">利用NodeSchool工具创建教程学习工具系列2</a>。<br><a id="more"></a><br>最近几天利用workshopper在仿照learnyounode制作一款学习python的教程工具，总之真的深深体会到一句话：“说的容易，做起来难”。</p>
<p>由于learnyounode本身就是处理<code>js</code>文件所以就相对方便许多，但是对于python学习就需要处理<code>py</code>文件，这样就需要多一道处理工序。</p>
<h3 id="u9996_u5148_uFF0C_u8BF4_u8BF4_u7528_u5230_u7684_u4E00_u4E9B_u6A21_u5757_u5427_uFF1A"><a href="#u9996_u5148_uFF0C_u8BF4_u8BF4_u7528_u5230_u7684_u4E00_u4E9B_u6A21_u5757_u5427_uFF1A" class="headerlink" title="首先，说说用到的一些模块吧："></a>首先，说说用到的一些模块吧：</h3><ul>
<li>workshopper – 这个肯定的，核心模块</li>
<li>workshopper-exercise – 这个是workshopper有关的文件检查，代码执行以及对比有关的工具库</li>
<li>python-shell – 用来执行python文件的</li>
</ul>
<p>上面是用到的主要模块，其他一些会在之后遇到时详细讲的。</p>
<h3 id="python_u4EE3_u7801_u5904_u7406"><a href="#python_u4EE3_u7801_u5904_u7406" class="headerlink" title="python代码处理"></a>python代码处理</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> PythonShell = <span class="built_in">require</span>(<span class="string">'python-shell'</span>),</span><br><span class="line">	path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> file = process.argv[<span class="number">2</span>],</span><br><span class="line">	filePath = path.resolve(file),</span><br><span class="line">	dir = path.dirname(filePath);</span><br><span class="line"></span><br><span class="line">PythonShell.run(file, &#123;</span><br><span class="line">	pythonPath: <span class="string">'D:\\software\\python34\\python3.exe'</span>,</span><br><span class="line">	scriptPath: dir,</span><br><span class="line">&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">err, results</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">	<span class="comment">// results is an array consisting of messages collected during execution </span></span><br><span class="line">	<span class="built_in">console</span>.log(results.join(<span class="string">''</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>主要是通过<code>process.argv[2]</code>来接受要执行的文件，然后将该文件分别传给参考答案执行进程和用户提交答案执行进程。</p>
<p>最后根据上一节讲的workshopper的工作方式，通过在<code>exercise.js</code>中去传递参数，代码如下：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> exercise      = <span class="built_in">require</span>(<span class="string">'workshopper-exercise'</span>)()</span><br><span class="line">	, filecheck     = <span class="built_in">require</span>(<span class="string">'workshopper-exercise/filecheck'</span>)</span><br><span class="line">	, execute       = <span class="built_in">require</span>(<span class="string">'workshopper-exercise/execute'</span>)</span><br><span class="line">	, comparestdout = <span class="built_in">require</span>(<span class="string">'workshopper-exercise/comparestdout'</span>)</span><br><span class="line">	, path          = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// checks that the submission file actually exists</span></span><br><span class="line">exercise = filecheck(exercise);</span><br><span class="line"></span><br><span class="line"><span class="comment">// execute the solution and submission in parallel with spawn()</span></span><br><span class="line">exercise = execute(exercise);</span><br><span class="line"></span><br><span class="line"><span class="comment">// compare stdout of solution and submission</span></span><br><span class="line">exercise = comparestdout(exercise);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">exercise.addSetup(<span class="function"><span class="keyword">function</span> (<span class="params">mode, callback</span>) </span>&#123;</span><br><span class="line">	<span class="comment">// mode == 'run' || 'verify'</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// supply the args to the 'execute' processor for both</span></span><br><span class="line">	<span class="comment">// solution and submission spawn()</span></span><br><span class="line">	<span class="keyword">this</span>.submissionArgs = <span class="keyword">this</span>.submission;</span><br><span class="line">	<span class="keyword">this</span>.solutionArgs = <span class="keyword">this</span>.solution.replace(<span class="regexp">/\.js/</span>, <span class="string">'.py'</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">this</span>.submissionCommand = [ <span class="string">'run-verify.js'</span> ].concat(<span class="keyword">this</span>.submissionArgs);</span><br><span class="line"></span><br><span class="line">	process.nextTick(callback);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = exercise;</span><br></pre></td></tr></table></figure>
<p>这是我的想法，如果大家有什么idea可以提出来，谢谢。</p>
<h2 id="u672A_u5B8C_u5F85_u7EED_u3002_u3002_u3002_u3002_u3002_u3002_u4E0B_u8282_u89C1"><a href="#u672A_u5B8C_u5F85_u7EED_u3002_u3002_u3002_u3002_u3002_u3002_u4E0B_u8282_u89C1" class="headerlink" title="未完待续。。。。。。下节见"></a>未完待续。。。。。。下节见</h2><p><img src="/images/weixin.jpg" alt="微信"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这是利用NodeSchool工具创建教程学习工具系列之三，上一部分见<a href="/2015/08/23/build-a-workshopper-series-2/">利用NodeSchool工具创建教程学习工具系列2</a>。<br>]]>
    
    </summary>
    
      <category term="教程" scheme="http://gtskk.coding.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[那些年迷过的结局出乎意料的悬疑电影]]></title>
    <link href="http://gtskk.coding.io/2015/08/24/upexpected-result-films/"/>
    <id>http://gtskk.coding.io/2015/08/24/upexpected-result-films/</id>
    <published>2015-08-24T13:44:11.000Z</published>
    <updated>2015-09-02T06:06:49.873Z</updated>
    <content type="html"><![CDATA[<p>那些年迷过的结局出乎意料的悬疑电影，近几年真的看过不少，正好趁此文章做个小结。<br><a id="more"></a></p>
<p>下面一一列举，排名是按照我自己内心中的来的，不喜勿喷，谢谢。<img src="/images/emojis/banana.png" width="18" height="18" class=" emoji nofancybox" title="banana"><img src="/images/emojis/banana.png" width="18" height="18" class=" emoji nofancybox" title="banana"></p>
<h3 id="1-_u300A_u8FF7_u96FE_u300B"><a href="#1-_u300A_u8FF7_u96FE_u300B" class="headerlink" title="1.《迷雾》"></a>1.《迷雾》</h3><p>为何把该片放在第一呢？因为这是我看的第一部悬疑片，而且这部片子让人能看的下去。什么意思呢，大家都知道悬疑片大都是<br>让人看着若坐针毡，但高潮时期让人爱不释手的，而且这部是让人全程无尿点，而且高潮也让人惊讶不已。</p>
<p>豆瓣链接：<a href="http://movie.douban.com/subject/1945330/" target="_blank" rel="external">迷雾</a><br>豆瓣评分：7.8</p>
<p><img src="/images/mist.jpg" alt="迷雾封面图"></p>
<h3 id="2-_u300A_u7535_u952F_u60CA_u9B421_u300B"><a href="#2-_u300A_u7535_u952F_u60CA_u9B421_u300B" class="headerlink" title="2.《电锯惊魂1》"></a>2.《电锯惊魂1》</h3><p>此片真是神片，也是无时无刻不在刺激着你的神经，这片本来想放在第一的，不过由于本人不是太喜欢血腥的，所以影响了在我心<br>中的评分。总之，这片神一样的存在着……</p>
<p>豆瓣链接：暂无（<img src="/images/emojis/sleepy.png" width="18" height="18" class=" emoji nofancybox" title="sleepy"><img src="/images/emojis/sleepy.png" width="18" height="18" class=" emoji nofancybox" title="sleepy">，这也禁？也是醉了）</p>
<p><img src="/images/saw.jpg" alt="电锯惊魂封面图"></p>
<h3 id="3-_u300A_u8001_u7537_u5B69_u300B"><a href="#3-_u300A_u8001_u7537_u5B69_u300B" class="headerlink" title="3.《老男孩》"></a>3.《老男孩》</h3><p>韩国棒子的电影，不得不说韩国人拍片真的是无下限，不过一点好，就是敢于表达，不掩饰。这也是我看过不少韩国电影的原因。</p>
<p>豆瓣链接：<a href="http://movie.douban.com/subject/1308865/" target="_blank" rel="external">老男孩</a><br>豆瓣评分：8.2</p>
<p><img src="/images/laonanhai.jpg" alt="老男孩封面图"></p>
<h3 id="4-_u300A_u9EC4_u6D77_u300B"><a href="#4-_u300A_u9EC4_u6D77_u300B" class="headerlink" title="4.《黄海》"></a>4.《黄海》</h3><p>一句话：河政宇凭借此片获得第47届百想艺术大赏颁奖礼最佳男演员奖。因为此片，我喜欢上河政宇的片子，真实实力派。</p>
<p>豆瓣链接：<a href="http://movie.douban.com/subject/3743114/" target="_blank" rel="external">黄海</a><br>豆瓣评分：8.3</p>
<p><img src="/images/huanghai.jpg" alt="黄海封面图"></p>
<h3 id="5-_u300A_u6050_u6016_u76F4_u64AD_u300B"><a href="#5-_u300A_u6050_u6016_u76F4_u64AD_u300B" class="headerlink" title="5.《恐怖直播》"></a>5.《恐怖直播》</h3><p>又是河政宇的一部好片，整部片子节奏很快，很刺激，河政宇的表演更是没的说。怒赞。</p>
<p>豆瓣链接：<a href="http://movie.douban.com/subject/21360417/" target="_blank" rel="external">恐怖直播</a><br>豆瓣评分：8.7</p>
<p><img src="/images/kongbuzhibo.jpg" alt="恐怖直播封面图"></p>
<h2 id="u4ECA_u5929_u6682_u65F6_u66F4_u65B0_u5230_u6B64_uFF0C_u5927_u5BB6_u597D_u597D_u6B23_u8D4F_u5427_uFF0C_u563F_u563F"><a href="#u4ECA_u5929_u6682_u65F6_u66F4_u65B0_u5230_u6B64_uFF0C_u5927_u5BB6_u597D_u597D_u6B23_u8D4F_u5427_uFF0C_u563F_u563F" class="headerlink" title="今天暂时更新到此，大家好好欣赏吧，嘿嘿"></a>今天暂时更新到此，大家好好欣赏吧，嘿嘿</h2><hr>

<p><img src="/images/weixin.jpg" alt="微信"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>那些年迷过的结局出乎意料的悬疑电影，近几年真的看过不少，正好趁此文章做个小结。<br>]]>
    
    </summary>
    
      <category term="教程" scheme="http://gtskk.coding.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
